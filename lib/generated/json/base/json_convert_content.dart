// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:priority_pulse/driver_json_entity.dart';
import 'package:priority_pulse/generated/json/driver_json_entity_helper.dart';
import 'package:priority_pulse/directions_json_entity.dart';
import 'package:priority_pulse/generated/json/directions_json_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case DriverJsonEntity:
			return driverJsonEntityFromJson(data as DriverJsonEntity, json) as T;			case DirectionsJsonEntity:
			return directionsJsonEntityFromJson(data as DirectionsJsonEntity, json) as T;			case DirectionsJsonGeocodedWaypoint:
			return directionsJsonGeocodedWaypointFromJson(data as DirectionsJsonGeocodedWaypoint, json) as T;			case DirectionsJsonRoute:
			return directionsJsonRouteFromJson(data as DirectionsJsonRoute, json) as T;			case DirectionsJsonRoutesBounds:
			return directionsJsonRoutesBoundsFromJson(data as DirectionsJsonRoutesBounds, json) as T;			case DirectionsJsonRoutesBoundsNortheast:
			return directionsJsonRoutesBoundsNortheastFromJson(data as DirectionsJsonRoutesBoundsNortheast, json) as T;			case DirectionsJsonRoutesBoundsSouthwest:
			return directionsJsonRoutesBoundsSouthwestFromJson(data as DirectionsJsonRoutesBoundsSouthwest, json) as T;			case DirectionsJsonRoutesLeg:
			return directionsJsonRoutesLegFromJson(data as DirectionsJsonRoutesLeg, json) as T;			case DirectionsJsonRoutesLegsDistance:
			return directionsJsonRoutesLegsDistanceFromJson(data as DirectionsJsonRoutesLegsDistance, json) as T;			case DirectionsJsonRoutesLegsDuration:
			return directionsJsonRoutesLegsDurationFromJson(data as DirectionsJsonRoutesLegsDuration, json) as T;			case DirectionsJsonRoutesLegsEndLocation:
			return directionsJsonRoutesLegsEndLocationFromJson(data as DirectionsJsonRoutesLegsEndLocation, json) as T;			case DirectionsJsonRoutesLegsStartLocation:
			return directionsJsonRoutesLegsStartLocationFromJson(data as DirectionsJsonRoutesLegsStartLocation, json) as T;			case DirectionsJsonRoutesLegsStep:
			return directionsJsonRoutesLegsStepFromJson(data as DirectionsJsonRoutesLegsStep, json) as T;			case DirectionsJsonRoutesLegsStepsDistance:
			return directionsJsonRoutesLegsStepsDistanceFromJson(data as DirectionsJsonRoutesLegsStepsDistance, json) as T;			case DirectionsJsonRoutesLegsStepsDuration:
			return directionsJsonRoutesLegsStepsDurationFromJson(data as DirectionsJsonRoutesLegsStepsDuration, json) as T;			case DirectionsJsonRoutesLegsStepsEndLocation:
			return directionsJsonRoutesLegsStepsEndLocationFromJson(data as DirectionsJsonRoutesLegsStepsEndLocation, json) as T;			case DirectionsJsonRoutesLegsStepsPolyline:
			return directionsJsonRoutesLegsStepsPolylineFromJson(data as DirectionsJsonRoutesLegsStepsPolyline, json) as T;			case DirectionsJsonRoutesLegsStepsStartLocation:
			return directionsJsonRoutesLegsStepsStartLocationFromJson(data as DirectionsJsonRoutesLegsStepsStartLocation, json) as T;			case DirectionsJsonRoutesOverviewPolyline:
			return directionsJsonRoutesOverviewPolylineFromJson(data as DirectionsJsonRoutesOverviewPolyline, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case DriverJsonEntity:
			return driverJsonEntityToJson(data as DriverJsonEntity);			case DirectionsJsonEntity:
			return directionsJsonEntityToJson(data as DirectionsJsonEntity);			case DirectionsJsonGeocodedWaypoint:
			return directionsJsonGeocodedWaypointToJson(data as DirectionsJsonGeocodedWaypoint);			case DirectionsJsonRoute:
			return directionsJsonRouteToJson(data as DirectionsJsonRoute);			case DirectionsJsonRoutesBounds:
			return directionsJsonRoutesBoundsToJson(data as DirectionsJsonRoutesBounds);			case DirectionsJsonRoutesBoundsNortheast:
			return directionsJsonRoutesBoundsNortheastToJson(data as DirectionsJsonRoutesBoundsNortheast);			case DirectionsJsonRoutesBoundsSouthwest:
			return directionsJsonRoutesBoundsSouthwestToJson(data as DirectionsJsonRoutesBoundsSouthwest);			case DirectionsJsonRoutesLeg:
			return directionsJsonRoutesLegToJson(data as DirectionsJsonRoutesLeg);			case DirectionsJsonRoutesLegsDistance:
			return directionsJsonRoutesLegsDistanceToJson(data as DirectionsJsonRoutesLegsDistance);			case DirectionsJsonRoutesLegsDuration:
			return directionsJsonRoutesLegsDurationToJson(data as DirectionsJsonRoutesLegsDuration);			case DirectionsJsonRoutesLegsEndLocation:
			return directionsJsonRoutesLegsEndLocationToJson(data as DirectionsJsonRoutesLegsEndLocation);			case DirectionsJsonRoutesLegsStartLocation:
			return directionsJsonRoutesLegsStartLocationToJson(data as DirectionsJsonRoutesLegsStartLocation);			case DirectionsJsonRoutesLegsStep:
			return directionsJsonRoutesLegsStepToJson(data as DirectionsJsonRoutesLegsStep);			case DirectionsJsonRoutesLegsStepsDistance:
			return directionsJsonRoutesLegsStepsDistanceToJson(data as DirectionsJsonRoutesLegsStepsDistance);			case DirectionsJsonRoutesLegsStepsDuration:
			return directionsJsonRoutesLegsStepsDurationToJson(data as DirectionsJsonRoutesLegsStepsDuration);			case DirectionsJsonRoutesLegsStepsEndLocation:
			return directionsJsonRoutesLegsStepsEndLocationToJson(data as DirectionsJsonRoutesLegsStepsEndLocation);			case DirectionsJsonRoutesLegsStepsPolyline:
			return directionsJsonRoutesLegsStepsPolylineToJson(data as DirectionsJsonRoutesLegsStepsPolyline);			case DirectionsJsonRoutesLegsStepsStartLocation:
			return directionsJsonRoutesLegsStepsStartLocationToJson(data as DirectionsJsonRoutesLegsStepsStartLocation);			case DirectionsJsonRoutesOverviewPolyline:
			return directionsJsonRoutesOverviewPolylineToJson(data as DirectionsJsonRoutesOverviewPolyline);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'DriverJsonEntity':
			return DriverJsonEntity().fromJson(json);			case 'DirectionsJsonEntity':
			return DirectionsJsonEntity().fromJson(json);			case 'DirectionsJsonGeocodedWaypoint':
			return DirectionsJsonGeocodedWaypoint().fromJson(json);			case 'DirectionsJsonRoute':
			return DirectionsJsonRoute().fromJson(json);			case 'DirectionsJsonRoutesBounds':
			return DirectionsJsonRoutesBounds().fromJson(json);			case 'DirectionsJsonRoutesBoundsNortheast':
			return DirectionsJsonRoutesBoundsNortheast().fromJson(json);			case 'DirectionsJsonRoutesBoundsSouthwest':
			return DirectionsJsonRoutesBoundsSouthwest().fromJson(json);			case 'DirectionsJsonRoutesLeg':
			return DirectionsJsonRoutesLeg().fromJson(json);			case 'DirectionsJsonRoutesLegsDistance':
			return DirectionsJsonRoutesLegsDistance().fromJson(json);			case 'DirectionsJsonRoutesLegsDuration':
			return DirectionsJsonRoutesLegsDuration().fromJson(json);			case 'DirectionsJsonRoutesLegsEndLocation':
			return DirectionsJsonRoutesLegsEndLocation().fromJson(json);			case 'DirectionsJsonRoutesLegsStartLocation':
			return DirectionsJsonRoutesLegsStartLocation().fromJson(json);			case 'DirectionsJsonRoutesLegsStep':
			return DirectionsJsonRoutesLegsStep().fromJson(json);			case 'DirectionsJsonRoutesLegsStepsDistance':
			return DirectionsJsonRoutesLegsStepsDistance().fromJson(json);			case 'DirectionsJsonRoutesLegsStepsDuration':
			return DirectionsJsonRoutesLegsStepsDuration().fromJson(json);			case 'DirectionsJsonRoutesLegsStepsEndLocation':
			return DirectionsJsonRoutesLegsStepsEndLocation().fromJson(json);			case 'DirectionsJsonRoutesLegsStepsPolyline':
			return DirectionsJsonRoutesLegsStepsPolyline().fromJson(json);			case 'DirectionsJsonRoutesLegsStepsStartLocation':
			return DirectionsJsonRoutesLegsStepsStartLocation().fromJson(json);			case 'DirectionsJsonRoutesOverviewPolyline':
			return DirectionsJsonRoutesOverviewPolyline().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'DriverJsonEntity':
			return List<DriverJsonEntity>();			case 'DirectionsJsonEntity':
			return List<DirectionsJsonEntity>();			case 'DirectionsJsonGeocodedWaypoint':
			return List<DirectionsJsonGeocodedWaypoint>();			case 'DirectionsJsonRoute':
			return List<DirectionsJsonRoute>();			case 'DirectionsJsonRoutesBounds':
			return List<DirectionsJsonRoutesBounds>();			case 'DirectionsJsonRoutesBoundsNortheast':
			return List<DirectionsJsonRoutesBoundsNortheast>();			case 'DirectionsJsonRoutesBoundsSouthwest':
			return List<DirectionsJsonRoutesBoundsSouthwest>();			case 'DirectionsJsonRoutesLeg':
			return List<DirectionsJsonRoutesLeg>();			case 'DirectionsJsonRoutesLegsDistance':
			return List<DirectionsJsonRoutesLegsDistance>();			case 'DirectionsJsonRoutesLegsDuration':
			return List<DirectionsJsonRoutesLegsDuration>();			case 'DirectionsJsonRoutesLegsEndLocation':
			return List<DirectionsJsonRoutesLegsEndLocation>();			case 'DirectionsJsonRoutesLegsStartLocation':
			return List<DirectionsJsonRoutesLegsStartLocation>();			case 'DirectionsJsonRoutesLegsStep':
			return List<DirectionsJsonRoutesLegsStep>();			case 'DirectionsJsonRoutesLegsStepsDistance':
			return List<DirectionsJsonRoutesLegsStepsDistance>();			case 'DirectionsJsonRoutesLegsStepsDuration':
			return List<DirectionsJsonRoutesLegsStepsDuration>();			case 'DirectionsJsonRoutesLegsStepsEndLocation':
			return List<DirectionsJsonRoutesLegsStepsEndLocation>();			case 'DirectionsJsonRoutesLegsStepsPolyline':
			return List<DirectionsJsonRoutesLegsStepsPolyline>();			case 'DirectionsJsonRoutesLegsStepsStartLocation':
			return List<DirectionsJsonRoutesLegsStepsStartLocation>();			case 'DirectionsJsonRoutesOverviewPolyline':
			return List<DirectionsJsonRoutesOverviewPolyline>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}